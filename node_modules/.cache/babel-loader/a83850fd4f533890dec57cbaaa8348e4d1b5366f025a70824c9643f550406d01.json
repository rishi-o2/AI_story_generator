{"ast":null,"code":"import _objectSpread from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport var Translations = /*#__PURE__*/function (_APIResource) {\n  _inherits(Translations, _APIResource);\n  var _super = _createSuper(Translations);\n  function Translations() {\n    _classCallCheck(this, Translations);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Translations, [{\n    key: \"create\",\n    value:\n    /**\n     * Translates audio into English.\n     */\n    function create(body, options) {\n      return this.post('/audio/translations', multipartFormRequestOptions(_objectSpread({\n        body: body\n      }, options)));\n    }\n  }]);\n  return Translations;\n}(APIResource);\n(function (Translations) {})(Translations || (Translations = {}));","map":{"version":3,"names":["APIResource","multipartFormRequestOptions","Translations","_APIResource","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","body","options","post","_objectSpread"],"sources":["E:\\Chat_bot_intership\\node_modules\\openai\\src\\resources\\audio\\translations.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from '../../core.js';\nimport { APIResource } from '../../resource.js';\nimport * as API from './index.js';\nimport { type Uploadable, multipartFormRequestOptions } from '../../core.js';\n\nexport class Translations extends APIResource {\n  /**\n   * Translates audio into English.\n   */\n  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation> {\n    return this.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\n  }\n}\n\nexport interface Translation {\n  text: string;\n}\n\nexport interface TranslationCreateParams {\n  /**\n   * The audio file object (not file name) translate, in one of these formats: flac,\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-1` is currently available.\n   */\n  model: (string & {}) | 'whisper-1';\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text/prompting)\n   * should be in English.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the transcript output, in one of these options: json, text, srt,\n   * verbose_json, or vtt.\n   */\n  response_format?: string;\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n}\n\nexport namespace Translations {\n  export import Translation = API.Translation;\n  export import TranslationCreateParams = API.TranslationCreateParams;\n}\n"],"mappings":";;;;;AAAA;SAGSA,WAAW,QAAQ,iBAAiB;SAEnBC,2BAA2B,QAAQ,aAAa;AAE1E,WAAaC,YAAa,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAAA,SAAAA,aAAA;IAAAK,eAAA,OAAAL,YAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,YAAA;IAAAS,GAAA;IAAAC,KAAA;;;;oBAIxBC,IAAO,EAA6BC,OAAE,EAA6B;aACjE,IAAO,CAAAC,IAAK,sBAAK,EAAAd,2BAAuB,CAAAe,aAAA;QAAAH,IAA8B,EAA9BA;MAA8B,GAAIC,OAAK,GAAO;;;;EALxDd,WAAW;AAiD7C,WAAiBE,YAAY,MAAAA,YAAA,KAAAA,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}