{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat_bot_intership\\\\src\\\\App2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  headingContainer: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  listItem: {\n    marginBottom: '20px',\n    backgroundColor: '#f7f7f7',\n    padding: '20px',\n    borderRadius: '5px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  prompt: {\n    fontWeight: 'bold'\n  },\n  likeButton: {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    padding: '10px 20px',\n    margin: '5px',\n    cursor: 'pointer'\n  },\n  dislikeButton: {\n    backgroundColor: '#f44336',\n    color: 'white',\n    border: 'none',\n    padding: '10px 20px',\n    margin: '5px',\n    cursor: 'pointer'\n  }\n};\nfunction StoryList() {\n  _s();\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    // Fetch the story data from the server\n    axios.get('/stories').then(response => {\n      // Sort stories by likes in descending order\n      const sortedStories = response.data.sort((a, b) => b.likes - a.likes);\n      setStories(sortedStories);\n    });\n  }, []);\n  const handleLike = async storyId => {\n    try {\n      const response = await axios.post(`/like/${storyId}`);\n      if (response.status === 200) {\n        // Update the local state to reflect the new number of likes\n        const updatedStories = stories.map(story => {\n          if (story._id === storyId) {\n            return {\n              ...story,\n              likes: story.likes + 1\n            };\n          }\n          return story;\n        });\n        setStories(updatedStories);\n      }\n    } catch (error) {\n      console.error('Error liking story:', error);\n    }\n  };\n  const handleDislike = async storyId => {\n    try {\n      const response = await axios.post(`/dislike/${storyId}`);\n      if (response.status === 200) {\n        // Update the local state to reflect the new number of dislikes\n        const updatedStories = stories.map(story => {\n          if (story._id === storyId) {\n            return {\n              ...story,\n              dislikes: story.dislikes + 1\n            };\n          }\n          return story;\n        });\n        setStories(updatedStories);\n      }\n    } catch (error) {\n      console.error('Error disliking story:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.headingContainer,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.heading,\n        children: \"Story Prompts and Generated Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.prompt,\n          children: \"Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.storyPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated Story:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.generatedStory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.likeButton,\n          onClick: () => handleLike(story._id),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faThumbsUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), \" Like (\", story.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.dislikeButton,\n          onClick: () => handleDislike(story._id),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faThumbsDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), \" Dislike (\", story.dislikes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(StoryList, \"cTz//Yl5IQLyRPBEoAItnTUhr1w=\");\n_c = StoryList;\nexport default StoryList;\nvar _c;\n$RefreshReg$(_c, \"StoryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faThumbsUp","faThumbsDown","jsxDEV","_jsxDEV","styles","container","padding","fontFamily","headingContainer","backgroundColor","color","marginBottom","borderRadius","boxShadow","display","justifyContent","alignItems","heading","fontSize","fontWeight","listItem","prompt","likeButton","border","margin","cursor","dislikeButton","StoryList","_s","stories","setStories","get","then","response","sortedStories","data","sort","a","b","likes","handleLike","storyId","post","status","updatedStories","map","story","_id","error","console","handleDislike","dislikes","style","children","fileName","_jsxFileName","lineNumber","columnNumber","index","storyPrompt","generatedStory","onClick","icon","_c","$RefreshReg$"],"sources":["E:/Chat_bot_intership/src/App2.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  headingContainer: {\r\n    backgroundColor: '#007bff',\r\n    color: 'white',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  listItem: {\r\n    marginBottom: '20px',\r\n    backgroundColor: '#f7f7f7',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  prompt: {\r\n    fontWeight: 'bold',\r\n  },\r\n  likeButton: {\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    padding: '10px 20px',\r\n    margin: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n  dislikeButton: {\r\n    backgroundColor: '#f44336',\r\n    color: 'white',\r\n    border: 'none',\r\n    padding: '10px 20px',\r\n    margin: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nfunction StoryList() {\r\n  const [stories, setStories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the story data from the server\r\n    axios.get('/stories').then((response) => {\r\n      // Sort stories by likes in descending order\r\n      const sortedStories = response.data.sort((a, b) => b.likes - a.likes);\r\n      setStories(sortedStories);\r\n    });\r\n  }, []);\r\n\r\n  const handleLike = async (storyId) => {\r\n    try {\r\n      const response = await axios.post(`/like/${storyId}`);\r\n      if (response.status === 200) {\r\n        // Update the local state to reflect the new number of likes\r\n        const updatedStories = stories.map((story) => {\r\n          if (story._id === storyId) {\r\n            return { ...story, likes: story.likes + 1 };\r\n          }\r\n          return story;\r\n        });\r\n        setStories(updatedStories);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error liking story:', error);\r\n    }\r\n  };\r\n\r\n  const handleDislike = async (storyId) => {\r\n    try {\r\n      const response = await axios.post(`/dislike/${storyId}`);\r\n      if (response.status === 200) {\r\n        // Update the local state to reflect the new number of dislikes\r\n        const updatedStories = stories.map((story) => {\r\n          if (story._id === storyId) {\r\n            return { ...story, dislikes: story.dislikes + 1 };\r\n          }\r\n          return story;\r\n        });\r\n        setStories(updatedStories);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disliking story:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.headingContainer}>\r\n        <span style={styles.heading}>Story Prompts and Generated Stories</span>\r\n        {/* Add any additional buttons or elements here */}\r\n      </div>\r\n      <ul>\r\n        {stories.map((story, index) => (\r\n          <li key={index} style={styles.listItem}>\r\n            <h3 style={styles.prompt}>Prompt:</h3>\r\n            <p>{story.storyPrompt}</p>\r\n            <h3>Generated Story:</h3>\r\n            <p>{story.generatedStory}</p>\r\n            <button\r\n              style={styles.likeButton}\r\n              onClick={() => handleLike(story._id)}\r\n            >\r\n              <FontAwesomeIcon icon={faThumbsUp} /> Like ({story.likes})\r\n            </button>\r\n            <button\r\n              style={styles.dislikeButton}\r\n              onClick={() => handleDislike(story._id)}\r\n            >\r\n              <FontAwesomeIcon icon={faThumbsDown} /> Dislike ({story.dislikes})\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}