{"ast":null,"code":"import _objectSpread from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport var Images = /*#__PURE__*/function (_APIResource) {\n  _inherits(Images, _APIResource);\n  var _super = _createSuper(Images);\n  function Images() {\n    _classCallCheck(this, Images);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Images, [{\n    key: \"createVariation\",\n    value:\n    /**\n     * Creates a variation of a given image.\n     */\n    function createVariation(body, options) {\n      return this.post('/images/variations', multipartFormRequestOptions(_objectSpread({\n        body: body\n      }, options)));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n  }, {\n    key: \"edit\",\n    value: function edit(body, options) {\n      return this.post('/images/edits', multipartFormRequestOptions(_objectSpread({\n        body: body\n      }, options)));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n  }, {\n    key: \"generate\",\n    value: function generate(body, options) {\n      return this.post('/images/generations', _objectSpread({\n        body: body\n      }, options));\n    }\n  }]);\n  return Images;\n}(APIResource);\n(function (Images) {})(Images || (Images = {}));","map":{"version":3,"names":["APIResource","multipartFormRequestOptions","Images","_APIResource","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","body","options","post","_objectSpread"],"sources":["E:\\Chat_bot_intership\\node_modules\\openai\\src\\resources\\images.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from '../core.js';\nimport { APIResource } from '../resource.js';\nimport * as API from './index.js';\nimport { type Uploadable, multipartFormRequestOptions } from '../core.js';\n\nexport class Images extends APIResource {\n  /**\n   * Creates a variation of a given image.\n   */\n  createVariation(\n    body: ImageCreateVariationParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ImagesResponse> {\n    return this.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Creates an edited or extended image given an original image and a prompt.\n   */\n  edit(body: ImageEditParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\n    return this.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Creates an image given a prompt.\n   */\n  generate(body: ImageGenerateParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\n    return this.post('/images/generations', { body, ...options });\n  }\n}\n\n/**\n * Represents the url or the content of an image generated by the OpenAI API.\n */\nexport interface Image {\n  /**\n   * The base64-encoded JSON of the generated image, if `response_format` is\n   * `b64_json`.\n   */\n  b64_json?: string;\n\n  /**\n   * The URL of the generated image, if `response_format` is `url` (default).\n   */\n  url?: string;\n}\n\nexport interface ImagesResponse {\n  created: number;\n\n  data: Array<Image>;\n}\n\nexport interface ImageCreateVariationParams {\n  /**\n   * The image to use as the basis for the variation(s). Must be a valid PNG file,\n   * less than 4MB, and square.\n   */\n  image: Uploadable;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageEditParams {\n  /**\n   * The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask\n   * is not provided, image must have transparency, which will be used as the mask.\n   */\n  image: Uploadable;\n\n  /**\n   * A text description of the desired image(s). The maximum length is 1000\n   * characters.\n   */\n  prompt: string;\n\n  /**\n   * An additional image whose fully transparent areas (e.g. where alpha is zero)\n   * indicate where `image` should be edited. Must be a valid PNG file, less than\n   * 4MB, and have the same dimensions as `image`.\n   */\n  mask?: Uploadable;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageGenerateParams {\n  /**\n   * A text description of the desired image(s). The maximum length is 1000\n   * characters.\n   */\n  prompt: string;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace Images {\n  export import Image = API.Image;\n  export import ImagesResponse = API.ImagesResponse;\n  export import ImageCreateVariationParams = API.ImageCreateVariationParams;\n  export import ImageEditParams = API.ImageEditParams;\n  export import ImageGenerateParams = API.ImageGenerateParams;\n}\n"],"mappings":";;;;;AAAA;SAGSA,WAAW,QAAQ,iBAAiB;SAEnBC,2BAA2B,QAAQ,aAAa;AAE1E,WAAaC,MAAO,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,MAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,MAAA;EAAA,SAAAA,OAAA;IAAAK,eAAA,OAAAL,MAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,MAAA;IAAAS,GAAA;IAAAC,KAAA;;;;6BAIlBC,IACE,EAAgCC,OAChC,EAA6B;aAE7B,IAAO,CAAAC,IAAK,qBAAK,EAAAd,2BAAsB,CAAAe,aAAA;QAAAH,IAA8B,EAA9BA;MAA8B,GAAIC,OAAK,GAAO;;;;;;;yBAMvFD,IAAK,EAAqBC,OAAE,EAA6B;aACvD,IAAO,CAAAC,IAAK,gBAAK,EAAAd,2BAAiB,CAAAe,aAAA;QAAAH,IAA8B,EAA9BA;MAA8B,GAAIC,OAAK,GAAO;;;;;;;6BAMlFD,IAAS,EAAyBC,OAAE,EAA6B;aAC/D,IAAO,CAAAC,IAAK,sBAAK,EAAAC,aAAA;QAAqBH,IAAI,EAAJA;MAAI,GAAIC,OAAK;;;;EAtB3Bd,WAAW;AA6JvC,WAAiBE,MAAM,MAAAA,MAAA,KAAAA,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}