{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat_bot_intership\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport OpenAI from 'openai';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [qType, setqType] = useState(\"general\");\n  const [cbResponse, setcbResponse] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n  const PARAMS = {\n    max_tokens: 500\n  };\n  const apiKey = process.env.REACT_APP_OPEN_API_KEY;\n  const openai = new OpenAI({\n    apiKey,\n    dangerouslyAllowBrowser: true\n  });\n  const handleLike = () => {\n    setLikes(1);\n    setDislikes(0);\n  };\n  const handleDislike = () => {\n    setDislikes(1);\n    setLikes(0);\n  };\n  const getInstruction = async ins => {\n    let prompt = ` ${ins}`;\n    return prompt;\n  };\n  const handleEvent = async e => {\n    e.preventDefault();\n    const prompt = await getInstruction(userInput);\n    console.log(userInput);\n    setLikes(0);\n    setDislikes(0);\n    //const endpoint = 'https://api.openai.com/v1/engines/davinci-codex/completions';\n    const body = {\n      ...PARAMS,\n      prompt\n    };\n    console.log(body);\n    try {\n      setIsLoading(true);\n      const response = await fetch(\"/GPT\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: prompt\n        })\n      });\n      const data = await response.json();\n      console.log(data[0]);\n      setcbResponse(data[0]);\n    } catch (error) {\n      console.error('API Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSave = () => {\n    // You can implement the logic for saving the text here\n    // For example, you can create a blob and trigger a download\n    const blob = new Blob([cbResponse.generated_text], {\n      type: \"text/plain\"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"generated_text.txt\";\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"hello World \", apiKey ? apiKey.slice(0, 5) : \"API Key Missing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control my-3\",\n        \"aria-label\": \"With textarea\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"enter your story prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleEvent,\n      className: \"btn btn-primary\",\n      disabled: isLoading,\n      style: {\n        marginBottom: \"20px\"\n      } // Add margin to the button\n      ,\n      children: isLoading ? \"Generating...\" : \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 1\n    }, this), cbResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cbResponseContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: cbResponse.generated_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        style: {\n          backgroundColor: \"#4CAF50\",\n          // Green background color\n          color: \"white\",\n          // White text color\n          border: \"none\",\n          // No border\n          padding: \"10px 20px\",\n          // Padding\n          margin: \"5px\",\n          // Margin\n          cursor: \"pointer\" // Cursor style\n        },\n        children: [\"Like (\", likes, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDislike,\n        style: {\n          backgroundColor: \"#f44336\",\n          // Red background color\n          color: \"white\",\n          // White text color\n          border: \"none\",\n          // No border\n          padding: \"10px 20px\",\n          // Padding\n          margin: \"5px\",\n          // Margin\n          cursor: \"pointer\" // Cursor style\n        },\n        children: [\"Dislike (\", dislikes, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"/g07BgWoGVFm3qT8b8tJc/I/xkg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","qType","setqType","cbResponse","setcbResponse","userInput","setUserInput","isLoading","setIsLoading","likes","setLikes","dislikes","setDislikes","PARAMS","max_tokens","apiKey","process","env","REACT_APP_OPEN_API_KEY","openai","dangerouslyAllowBrowser","handleLike","handleDislike","getInstruction","ins","prompt","handleEvent","e","preventDefault","console","log","body","response","fetch","method","headers","JSON","stringify","data","json","error","handleSave","blob","Blob","generated_text","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","children","slice","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","target","placeholder","onClick","disabled","style","marginBottom","backgroundColor","color","border","padding","margin","cursor","_c","$RefreshReg$"],"sources":["E:/Chat_bot_intership/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport OpenAI from 'openai';\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n  const [qType, setqType] = useState(\"general\");\r\n  const [cbResponse, setcbResponse] = useState(\"\");\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [likes, setLikes] = useState(0);\r\n  \r\n  const [dislikes, setDislikes] = useState(0);\r\n  const PARAMS = {\r\n    max_tokens: 500\r\n  };\r\n  const apiKey = process.env.REACT_APP_OPEN_API_KEY;\r\n  const openai = new OpenAI({ apiKey, dangerouslyAllowBrowser: true });\r\n  const handleLike = () => {\r\n    setLikes( 1);\r\n    setDislikes(0);\r\n  };\r\n\r\n  const handleDislike = () => {\r\n    setDislikes( 1);\r\n    setLikes(0);\r\n  };\r\n\r\n  const getInstruction = async (ins) => {\r\n    let prompt = ` ${ins}`;\r\n    return prompt;\r\n  }\r\n\r\n\r\n  const handleEvent = async (e) => {\r\n    e.preventDefault();\r\n    const prompt = await getInstruction(userInput);\r\n    console.log(userInput);\r\n    setLikes(0);\r\n  setDislikes(0);\r\n    //const endpoint = 'https://api.openai.com/v1/engines/davinci-codex/completions';\r\n    const body = { ...PARAMS, prompt };\r\n    console.log(body)\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"/GPT\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \r\n        },\r\n        body: JSON.stringify({data:prompt})\r\n      });\r\n      const data = await response.json();\r\n      console.log(data[0])\r\n      setcbResponse(data[0]);\r\n     \r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  const handleSave = () => {\r\n    // You can implement the logic for saving the text here\r\n    // For example, you can create a blob and trigger a download\r\n    const blob = new Blob([cbResponse.generated_text], { type: \"text/plain\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"generated_text.txt\";\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        hello World {apiKey ? apiKey.slice(0, 5) : \"API Key Missing\"}\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <textarea\r\n          className=\"form-control my-3\"\r\n          aria-label=\"With textarea\"\r\n          value={userInput}\r\n          onChange={e => setUserInput(e.target.value)}\r\n          placeholder=\"enter your story prompt\"\r\n        ></textarea>\r\n      </div>\r\n     \r\n\r\n<button\r\n  type=\"button\"\r\n  onClick={handleEvent}\r\n  className=\"btn btn-primary\"\r\n  disabled={isLoading}\r\n  style={{ marginBottom: \"20px\" }} // Add margin to the button\r\n>\r\n  {isLoading ? \"Generating...\" : \"Generate\"}\r\n</button>\r\n\r\n\r\n\r\n{cbResponse && (\r\n  <div className=\"cbResponseContainer\">\r\n    <p>{cbResponse.generated_text}</p>\r\n    <button\r\n      onClick={handleLike}\r\n      style={{\r\n        backgroundColor: \"#4CAF50\", // Green background color\r\n        color: \"white\",             // White text color\r\n        border: \"none\",            // No border\r\n        padding: \"10px 20px\",       // Padding\r\n        margin: \"5px\",              // Margin\r\n        cursor: \"pointer\",         // Cursor style\r\n      }}\r\n    >\r\n      Like ({likes})\r\n    </button>\r\n    <button\r\n      onClick={handleDislike}\r\n      style={{\r\n        backgroundColor: \"#f44336\", // Red background color\r\n        color: \"white\",             // White text color\r\n        border: \"none\",            // No border\r\n        padding: \"10px 20px\",       // Padding\r\n        margin: \"5px\",              // Margin\r\n        cursor: \"pointer\",         // Cursor style\r\n      }}\r\n    >\r\n      Dislike ({dislikes})\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}