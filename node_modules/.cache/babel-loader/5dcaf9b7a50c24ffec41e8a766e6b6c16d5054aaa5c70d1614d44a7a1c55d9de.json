{"ast":null,"code":"import _createClass from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _possibleConstructorReturn from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\n\nvar _FormData = FormData;\nvar _Blob = Blob;\nvar _File = typeof File !== 'undefined' ? File :\n/*#__PURE__*/\n// Bun doesn't implement File yet, so just make a shim that throws a helpful error message\nfunction (_Blob2) {\n  _inherits(File, _Blob2);\n  var _super = _createSuper(File);\n  function File() {\n    var _this;\n    _classCallCheck(this, File);\n    throw new Error(\"file uploads aren't supported in this environment yet as 'File' is not defined\");\n    return _possibleConstructorReturn(_this);\n  }\n  return _createClass(File);\n}( /*#__PURE__*/_wrapNativeSuper(Blob));\nexport { _FormData as FormData, _File as File, _Blob as Blob };\nexport var isPolyfilled = false;","map":{"version":3,"names":["_FormData","FormData","_Blob","Blob","_File","File","_Blob2","_inherits","_super","_createSuper","_this","_classCallCheck","Error","_possibleConstructorReturn","_createClass","_wrapNativeSuper","isPolyfilled"],"sources":["E:/Chat_bot_intership/node_modules/openai/_shims/form-data.mjs"],"sourcesContent":["/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\n\nconst _FormData = FormData;\nconst _Blob = Blob;\n\nconst _File =\n  typeof File !== 'undefined' ? File : (\n    // Bun doesn't implement File yet, so just make a shim that throws a helpful error message\n    class File extends Blob {\n      constructor() {\n        throw new Error(`file uploads aren't supported in this environment yet as 'File' is not defined`);\n      }\n    }\n  );\n\nexport { _FormData as FormData, _File as File, _Blob as Blob };\n\nexport const isPolyfilled = false;\n"],"mappings":";;;;;;AAAA;AACA;AACA;;AAEA,IAAMA,SAAS,GAAGC,QAAQ;AAC1B,IAAMC,KAAK,GAAGC,IAAI;AAElB,IAAMC,KAAK,GACT,OAAOC,IAAI,KAAK,WAAW,GAAGA,IAAI;AAAA;AAChC;AAAA,UAAAC,MAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,IAAA;EAEE,SAAAA,KAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,IAAA;IACZ,MAAM,IAAIO,KAAK,iFAAiF,CAAC;IAAC,OAAAC,0BAAA,CAAAH,KAAA;EACpG;EAAC,OAAAI,YAAA,CAAAT,IAAA;AAAA,gBAAAU,gBAAA,CAHgBZ,IAAI,EAKxB;AAEH,SAASH,SAAS,IAAIC,QAAQ,EAAEG,KAAK,IAAIC,IAAI,EAAEH,KAAK,IAAIC,IAAI;AAE5D,OAAO,IAAMa,YAAY,GAAG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}