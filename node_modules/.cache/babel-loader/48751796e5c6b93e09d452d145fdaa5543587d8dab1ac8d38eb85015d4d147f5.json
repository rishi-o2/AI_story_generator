{"ast":null,"code":"import _regeneratorRuntime from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Chat_bot_intership/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { sleep } from 'openai/core';\nimport { APIConnectionTimeoutError } from 'openai/error';\nimport { multipartFormRequestOptions } from 'openai/core';\nimport { Page } from 'openai/pagination';\nexport var Files = /*#__PURE__*/function (_APIResource) {\n  _inherits(Files, _APIResource);\n  var _super = _createSuper(Files);\n  function Files() {\n    _classCallCheck(this, Files);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Files, [{\n    key: \"create\",\n    value:\n    /**\n     * Upload a file that contains document(s) to be used across various\n     * endpoints/features. Currently, the size of all the files uploaded by one\n     * organization can be up to 1 GB. Please contact us if you need to increase the\n     * storage limit.\n     */\n    function create(body, options) {\n      return this.post('/files', multipartFormRequestOptions(_objectSpread({\n        body: body\n      }, options)));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(fileId, options) {\n      return this.get(\"/files/\".concat(fileId), options);\n    }\n    /**\n     * Returns a list of files that belong to the user's organization.\n     */\n  }, {\n    key: \"list\",\n    value: function list(options) {\n      return this.getAPIList('/files', FileObjectsPage, options);\n    }\n    /**\n     * Delete a file.\n     */\n  }, {\n    key: \"del\",\n    value: function del(fileId, options) {\n      return this.delete(\"/files/\".concat(fileId), options);\n    }\n    /**\n     * Returns the contents of the specified file\n     */\n  }, {\n    key: \"retrieveContent\",\n    value: function retrieveContent(fileId, options) {\n      return this.get(\"/files/\".concat(fileId, \"/content\"), _objectSpread(_objectSpread({}, options), {}, {\n        headers: _objectSpread({\n          Accept: 'application/json'\n        }, options === null || options === void 0 ? void 0 : options.headers)\n      }));\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n  }, {\n    key: \"waitForProcessing\",\n    value: function () {\n      var _waitForProcessing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(id) {\n        var _ref,\n          _ref$pollInterval,\n          pollInterval,\n          _ref$maxWait,\n          maxWait,\n          TERMINAL_STATES,\n          start,\n          file,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, _ref$pollInterval = _ref.pollInterval, pollInterval = _ref$pollInterval === void 0 ? 5000 : _ref$pollInterval, _ref$maxWait = _ref.maxWait, maxWait = _ref$maxWait === void 0 ? 30 * 60 * 1000 : _ref$maxWait;\n              TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n              start = Date.now();\n              _context.next = 5;\n              return this.retrieve(id);\n            case 5:\n              file = _context.sent;\n            case 6:\n              if (!(!file.status || !TERMINAL_STATES.has(file.status))) {\n                _context.next = 16;\n                break;\n              }\n              _context.next = 9;\n              return sleep(pollInterval);\n            case 9:\n              _context.next = 11;\n              return this.retrieve(id);\n            case 11:\n              file = _context.sent;\n              if (!(Date.now() - start > maxWait)) {\n                _context.next = 14;\n                break;\n              }\n              throw new APIConnectionTimeoutError({\n                message: \"Giving up on waiting for file \".concat(id, \" to finish processing after \").concat(maxWait, \" milliseconds.\")\n              });\n            case 14:\n              _context.next = 6;\n              break;\n            case 16:\n              return _context.abrupt(\"return\", file);\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function waitForProcessing(_x) {\n        return _waitForProcessing.apply(this, arguments);\n      }\n      return waitForProcessing;\n    }()\n  }]);\n  return Files;\n}(APIResource);\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport var FileObjectsPage = /*#__PURE__*/function (_Page) {\n  _inherits(FileObjectsPage, _Page);\n  var _super2 = _createSuper(FileObjectsPage);\n  function FileObjectsPage() {\n    _classCallCheck(this, FileObjectsPage);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(FileObjectsPage);\n}(Page);\n(function (Files) {})(Files || (Files = {}));","map":{"version":3,"names":["APIResource","sleep","APIConnectionTimeoutError","multipartFormRequestOptions","Page","Files","_APIResource","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","body","options","post","_objectSpread","fileId","get","concat","getAPIList","FileObjectsPage","delete","headers","id","_ref","_ref$pollInterval","pollInterval","_ref$maxWait","maxWait","TERMINAL_STATES","start","file","_args","_regeneratorRuntime","wrap","_callee$","_context","prev","next","length","undefined","Set","Date","now","retrieve","sent","status","has","message","abrupt","stop","_callee","_Page","_super2"],"sources":["E:\\Chat_bot_intership\\node_modules\\openai\\src\\resources\\files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from '../core.js';\nimport { APIResource } from '../resource.js';\nimport { sleep } from '../core.js';\nimport { APIConnectionTimeoutError } from '../error.js';\nimport * as API from './index.js';\nimport { type Uploadable, multipartFormRequestOptions } from '../core.js';\nimport { Page } from '../pagination.js';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that contains document(s) to be used across various\n   * endpoints/features. Currently, the size of all the files uploaded by one\n   * organization can be up to 1 GB. Please contact us if you need to increase the\n   * storage limit.\n   */\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this.post('/files', multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this.get(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns a list of files that belong to the user's organization.\n   */\n  list(options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject> {\n    return this.getAPIList('/files', FileObjectsPage, options);\n  }\n\n  /**\n   * Delete a file.\n   */\n  del(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleted> {\n    return this.delete(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file\n   */\n  retrieveContent(fileId: string, options?: Core.RequestOptions): Core.APIPromise<string> {\n    return this.get(`/files/${fileId}/content`, {\n      ...options,\n      headers: { Accept: 'application/json', ...options?.headers },\n    });\n  }\n\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(\n    id: string,\n    { pollInterval = 5000, maxWait = 30 * 60 * 1000 }: { pollInterval?: number; maxWait?: number } = {},\n  ): Promise<FileObject> {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n\n    const start = Date.now();\n    let file = await this.retrieve(id);\n\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n        });\n      }\n    }\n\n    return file;\n  }\n}\n\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page<FileObject> {}\n// alias so we can export it in the namespace\ntype _FileObjectsPage = FileObjectsPage;\n\nexport type FileContent = string;\n\nexport interface FileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: string;\n}\n\n/**\n * The `File` object represents a document that has been uploaded to OpenAI.\n */\nexport interface FileObject {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The size of the file in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the file.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always \"file\".\n   */\n  object: string;\n\n  /**\n   * The intended purpose of the file. Currently, only \"fine-tune\" is supported.\n   */\n  purpose: string;\n\n  /**\n   * The current status of the file, which can be either `uploaded`, `processed`,\n   * `pending`, `error`, `deleting` or `deleted`.\n   */\n  status?: string;\n\n  /**\n   * Additional details about the status of the file. If the file is in the `error`\n   * state, this will include a message describing the error.\n   */\n  status_details?: string | null;\n}\n\nexport interface FileCreateParams {\n  /**\n   * Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be\n   * uploaded.\n   *\n   * If the `purpose` is set to \"fine-tune\", the file will be used for fine-tuning.\n   */\n  file: Uploadable;\n\n  /**\n   * The intended purpose of the uploaded documents.\n   *\n   * Use \"fine-tune\" for\n   * [fine-tuning](https://platform.openai.com/docs/api-reference/fine-tuning). This\n   * allows us to validate the format of the uploaded file.\n   */\n  purpose: string;\n}\n\nexport namespace Files {\n  export import FileContent = API.FileContent;\n  export import FileDeleted = API.FileDeleted;\n  export import FileObject = API.FileObject;\n  export type FileObjectsPage = _FileObjectsPage;\n  export import FileCreateParams = API.FileCreateParams;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}