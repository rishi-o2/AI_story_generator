{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat_bot_intership\\\\src\\\\App2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  // ... (your existing styles)\n};\nfunction StoryList() {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [showReloadMessage, setShowReloadMessage] = useState(false);\n  useEffect(() => {\n    // Fetch the story data from the server\n    axios.get('/stories').then(response => {\n      // Sort stories by likes in descending order\n      const sortedStories = response.data.sort((a, b) => b.likes - a.likes);\n      setStories(sortedStories);\n    });\n  }, []);\n  const handleLike = async storyId => {\n    try {\n      const response = await axios.post(`/like/${storyId}`);\n      if (response.status === 200) {\n        // Update the local state to reflect the new number of likes\n        const updatedStories = stories.map(story => {\n          if (story._id === storyId) {\n            return {\n              ...story,\n              likes: story.likes + 1\n            };\n          }\n          return story;\n        });\n        setStories(updatedStories);\n        setShowReloadMessage(true); // Show the reload message\n      }\n    } catch (error) {\n      console.error('Error liking story:', error);\n    }\n  };\n  const handleDislike = async storyId => {\n    try {\n      const response = await axios.post(`/dislike/${storyId}`);\n      if (response.status === 200) {\n        // Update the local state to reflect the new number of dislikes\n        const updatedStories = stories.map(story => {\n          if (story._id === storyId) {\n            return {\n              ...story,\n              dislikes: story.dislikes + 1\n            };\n          }\n          return story;\n        });\n        setStories(updatedStories);\n        setShowReloadMessage(true); // Show the reload message\n      }\n    } catch (error) {\n      console.error('Error disliking story:', error);\n    }\n  };\n  const reloadMessage = showReloadMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reload to check the leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.headingContainer,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.heading,\n        children: \"Story Prompts and Generated Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), reloadMessage, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.prompt,\n          children: \"Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.storyPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated Story:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.generatedStory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.likeButton,\n          onClick: () => handleLike(story._id),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faThumbsUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), \" Like (\", story.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.dislikeButton,\n          onClick: () => handleDislike(story._id),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faThumbsDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \" Dislike (\", story.dislikes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(StoryList, \"iYzy25gPa5qTNLRSp6wUoOEPrMQ=\");\n_c = StoryList;\nexport default StoryList;\nvar _c;\n$RefreshReg$(_c, \"StoryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faThumbsUp","faThumbsDown","jsxDEV","_jsxDEV","styles","StoryList","_s","stories","setStories","showReloadMessage","setShowReloadMessage","get","then","response","sortedStories","data","sort","a","b","likes","handleLike","storyId","post","status","updatedStories","map","story","_id","error","console","handleDislike","dislikes","reloadMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","style","container","headingContainer","heading","index","listItem","prompt","storyPrompt","generatedStory","likeButton","onClick","icon","dislikeButton","_c","$RefreshReg$"],"sources":["E:/Chat_bot_intership/src/App2.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst styles = {\r\n  // ... (your existing styles)\r\n};\r\n\r\nfunction StoryList() {\r\n  const [stories, setStories] = useState([]);\r\n  const [showReloadMessage, setShowReloadMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the story data from the server\r\n    axios.get('/stories').then((response) => {\r\n      // Sort stories by likes in descending order\r\n      const sortedStories = response.data.sort((a, b) => b.likes - a.likes);\r\n      setStories(sortedStories);\r\n    });\r\n  }, []);\r\n\r\n  const handleLike = async (storyId) => {\r\n    try {\r\n      const response = await axios.post(`/like/${storyId}`);\r\n      if (response.status === 200) {\r\n        // Update the local state to reflect the new number of likes\r\n        const updatedStories = stories.map((story) => {\r\n          if (story._id === storyId) {\r\n            return { ...story, likes: story.likes + 1 };\r\n          }\r\n          return story;\r\n        });\r\n        setStories(updatedStories);\r\n        setShowReloadMessage(true); // Show the reload message\r\n      }\r\n    } catch (error) {\r\n      console.error('Error liking story:', error);\r\n    }\r\n  };\r\n\r\n  const handleDislike = async (storyId) => {\r\n    try {\r\n      const response = await axios.post(`/dislike/${storyId}`);\r\n      if (response.status === 200) {\r\n        // Update the local state to reflect the new number of dislikes\r\n        const updatedStories = stories.map((story) => {\r\n          if (story._id === storyId) {\r\n            return { ...story, dislikes: story.dislikes + 1 };\r\n          }\r\n          return story;\r\n        });\r\n        setStories(updatedStories);\r\n        setShowReloadMessage(true); // Show the reload message\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disliking story:', error);\r\n    }\r\n  };\r\n\r\n  const reloadMessage = showReloadMessage && (\r\n    <div>\r\n      <p>Reload to check the leaderboard</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.headingContainer}>\r\n        <span style={styles.heading}>Story Prompts and Generated Stories</span>\r\n      </div>\r\n      {reloadMessage}\r\n      <ul>\r\n        {stories.map((story, index) => (\r\n          <li key={index} style={styles.listItem}>\r\n            <h3 style={styles.prompt}>Prompt:</h3>\r\n            <p>{story.storyPrompt}</p>\r\n            <h3>Generated Story:</h3>\r\n            <p>{story.generatedStory}</p>\r\n            <button\r\n              style={styles.likeButton}\r\n              onClick={() => handleLike(story._id)}\r\n            >\r\n              <FontAwesomeIcon icon={faThumbsUp} /> Like ({story.likes})\r\n            </button>\r\n            <button\r\n              style={styles.dislikeButton}\r\n              onClick={() => handleDislike(story._id)}\r\n            >\r\n              <FontAwesomeIcon icon={faThumbsDown} /> Dislike ({story.dislikes})\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}