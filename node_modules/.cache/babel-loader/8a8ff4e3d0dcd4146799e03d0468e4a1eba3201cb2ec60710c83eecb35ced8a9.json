{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat_bot_intership\\\\src\\\\App2.jsx\",\n  _s = $RefreshSig$();\n// components/StoryList.js\n\n// components/StoryList.js\n\n// components/StoryList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  headingContainer: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  listItem: {\n    marginBottom: '20px',\n    backgroundColor: '#f7f7f7',\n    padding: '20px',\n    borderRadius: '5px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  prompt: {\n    fontWeight: 'bold'\n  }\n};\nfunction StoryList() {\n  _s();\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    // Fetch the story data from the server\n    axios.get('/api/stories').then(response => {\n      setStories(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.headingContainer,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.heading,\n        children: \"Story Prompts and Generated Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.prompt,\n          children: \"Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.storyPrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated Story:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.generatedStory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(StoryList, \"cTz//Yl5IQLyRPBEoAItnTUhr1w=\");\n_c = StoryList;\nexport default StoryList;\nvar _c;\n$RefreshReg$(_c, \"StoryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","styles","container","padding","fontFamily","headingContainer","backgroundColor","color","marginBottom","borderRadius","boxShadow","display","justifyContent","alignItems","heading","fontSize","fontWeight","listItem","prompt","StoryList","_s","stories","setStories","get","then","response","data","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","story","index","storyPrompt","generatedStory","_c","$RefreshReg$"],"sources":["E:/Chat_bot_intership/src/App2.jsx"],"sourcesContent":["// components/StoryList.js\r\n\r\n// components/StoryList.js\r\n\r\n// components/StoryList.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  headingContainer: {\r\n    backgroundColor: '#007bff',\r\n    color: 'white',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  listItem: {\r\n    marginBottom: '20px',\r\n    backgroundColor: '#f7f7f7',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  prompt: {\r\n    fontWeight: 'bold',\r\n  },\r\n};\r\n\r\nfunction StoryList() {\r\n  const [stories, setStories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the story data from the server\r\n    axios.get('/api/stories').then((response) => {\r\n      setStories(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.headingContainer}>\r\n        <span style={styles.heading}>Story Prompts and Generated Stories</span>\r\n        {/* Add any additional buttons or elements here */}\r\n      </div>\r\n      <ul>\r\n        {stories.map((story, index) => (\r\n          <li key={index} style={styles.listItem}>\r\n            <h3 style={styles.prompt}>Prompt:</h3>\r\n            <p>{story.storyPrompt}</p>\r\n            <h3>Generated Story:</h3>\r\n            <p>{story.generatedStory}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryList;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}