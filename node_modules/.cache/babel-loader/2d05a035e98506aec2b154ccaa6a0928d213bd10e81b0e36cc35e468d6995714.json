{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat_bot_intership\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { OpenAI } from 'openai';\nimport { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [qType, setqType] = useState(\"general\");\n  const [cbResponse, setcbresponse] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [isLoading, setisloading] = useState(false);\n  const PARAMS = {\n    max_tokens: 256\n  };\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPEN_API_KEY\n  });\n  console.log(process.env.REACT_APP_OPEN_API_KEY);\n  const apiKey = process.env.REACT_APP_OPEN_API_KEY;\n  const getInstruction = async ins => {\n    let prompt = `generate a full story on the basis of the given story prompt:${ins}`;\n    return prompt;\n  };\n  const handleEvent = async e => {\n    e.preventDefault();\n    const prompt = getInstruction(userInput);\n    const endpoint = 'https://api.openai.com/v1/engines/davinci-codex/completions'; // Adjust the endpoint as needed\n\n    console.log(\"Form is submitted\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"hello World \", apiKey ? apiKey.slice(0, 5) : \"API Key Missing\", /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control my-3\",\n        \"aria-label\": \"With textarea\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"enter your story prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleEvent,\n      class: \"btn btn-primary\",\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"TvnP1WY2gLhqPDJt8ycg4wQSWYo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["react","OpenAI","useState","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","qType","setqType","cbResponse","setcbresponse","userInput","setUserInput","isLoading","setisloading","PARAMS","max_tokens","openai","apiKey","process","env","REACT_APP_OPEN_API_KEY","console","log","getInstruction","ins","prompt","handleEvent","e","preventDefault","endpoint","children","slice","class","className","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["E:/Chat_bot_intership/src/App.jsx"],"sourcesContent":["import react from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { OpenAI } from 'openai';\r\n\r\nimport { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const [qType , setqType] = useState(\"general\")\r\n  const[cbResponse,setcbresponse] = useState(\"\");\r\n  const[userInput,setUserInput] = useState(\"\");\r\n  const[isLoading,setisloading] = useState(false);\r\n  const PARAMS = {\r\n    max_tokens : 256\r\n  }\r\n  const openai = new OpenAI({\r\n    apiKey : process.env.REACT_APP_OPEN_API_KEY\r\n  })\r\n\r\n  console.log(process.env.REACT_APP_OPEN_API_KEY);\r\n  const apiKey = process.env.REACT_APP_OPEN_API_KEY;\r\n  const getInstruction = async(ins)=>{\r\n    let prompt = `generate a full story on the basis of the given story prompt:${ins}`\r\n    return prompt;\r\n  }\r\n  const handleEvent = async(e) =>{\r\n    e.preventDefault()\r\n    const prompt = getInstruction(userInput)\r\n    const endpoint = 'https://api.openai.com/v1/engines/davinci-codex/completions'; // Adjust the endpoint as needed\r\n\r\n    console.log(\"Form is submitted\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      hello World {apiKey ? apiKey.slice(0, 5) : \"API Key Missing\"}\r\n      <div class=\"input-group\">\r\n  \r\n  <textarea className=\"form-control my-3\" aria-label=\"With textarea\" value={userInput} onChange={e=>setUserInput(e.target.value)} placeholder=\"enter your story prompt\"></textarea>\r\n  \r\n</div>\r\n<button type=\"button\" onClick={handleEvent} class=\"btn btn-primary\">Generate</button>\r\n    </>\r\n  );\r\n}\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EAC9C,MAAK,CAACU,UAAU,EAACC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAK,CAACY,SAAS,EAACC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAK,CAACc,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMgB,MAAM,GAAG;IACbC,UAAU,EAAG;EACf,CAAC;EACD,MAAMC,MAAM,GAAG,IAAInB,MAAM,CAAC;IACxBoB,MAAM,EAAGC,OAAO,CAACC,GAAG,CAACC;EACvB,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAC;EAC/C,MAAMH,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACjD,MAAMG,cAAc,GAAG,MAAMC,GAAG,IAAG;IACjC,IAAIC,MAAM,GAAI,gEAA+DD,GAAI,EAAC;IAClF,OAAOC,MAAM;EACf,CAAC;EACD,MAAMC,WAAW,GAAG,MAAMC,CAAC,IAAI;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMH,MAAM,GAAGF,cAAc,CAACb,SAAS,CAAC;IACxC,MAAMmB,QAAQ,GAAG,6DAA6D,CAAC,CAAC;;IAEhFR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,GAAE,cACY,EAACb,MAAM,GAAGA,MAAM,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,eAC5D9B,OAAA;MAAK+B,KAAK,EAAC,aAAa;MAAAF,QAAA,eAE5B7B,OAAA;QAAUgC,SAAS,EAAC,mBAAmB;QAAC,cAAW,eAAe;QAACC,KAAK,EAAExB,SAAU;QAACyB,QAAQ,EAAER,CAAC,IAAEhB,YAAY,CAACgB,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAACG,WAAW,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9K,CAAC,eACNxC,OAAA;MAAQyC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEjB,WAAY;MAACM,KAAK,EAAC,iBAAiB;MAAAF,QAAA,EAAC;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC/E,CAAC;AAEP;AAACpC,EAAA,CArCQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}